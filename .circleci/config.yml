# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/2.0/configuration-reference
# version: 2.1
# commands:
#   print_pipeline_id:
#     steps:
#       - run: echo ${CIRCLE_WORKFLOW_ID}

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# jobs:
#   #say-hello:
#     # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
#     #docker:
#       #- image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#     #steps:
#       #- checkout
#       #- run:
#           #name: "Say hello"
#           #command: "echo Hello, World!"
  
#   print_hello:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - checkout
#       - run:
#           name: "Print Hello"
#           command: "echo Hello"
#   print_world:
#     docker:
#       - image : circleci/node:13.8.0
#     steps:
#       - checkout
#       - run:
#           name: "Print World"
#           command: "echo World from my code"
#   print_name:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - checkout
#       - run:
#           name: "Print Name"
#           command: |
#             echo $MY_NAME2
#   save_hello_world_output:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo "Saved content" > ~/output.txt
#       - persist_to_workspace:
#           root: ~/
#           paths:
#             - "output.txt"
#   print_output_file:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - attach_workspace:
#           at: ~/
#       - run: cat ~/output.txt 
#   call_command:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - print_pipeline_id


# # Invoke jobs via workflows
# # See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   test_commands:
#     jobs:
#       - call_command
version: 2.1
# Use a package of configuration called an orb.
#orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
jobs:
  myjob1:  # Choose any name, such as `build`
      # The primary container, where your job's commands will run
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout # check out the code in the project directory
        - run: echo "hello world" # run the `echo` command
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
  
